<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BuscarUsuabutton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>